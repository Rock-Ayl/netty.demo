plugins {
    id 'java'
}

//组织
group 'cn.ayl'
//当前版本
version '1.0'

//指定编译.java文件的jdk版本
sourceCompatibility = 1.8

//启动main
String mainPath = 'cn.ayl.Server'
//部署时依赖的路径,该参数及对应逻辑,在方法2使用,1注掉
String libsPath = '/netty-demo/libs/'

//使用的库
repositories {
    //默认的库
    mavenCentral()
}

//依赖
dependencies {

    //netty-4
    compile group: 'io.netty', name: 'netty-all', version: '4.1.19.Final'
    //mongo-Bson
    compile group: 'org.mongodb', name: 'mongo-java-driver', version: '3.8.2'
    //google-Gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    //apache-commons工具包
    compile group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.1.1'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.6'
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    compile group: 'commons-codec', name: 'commons-codec', version: '1.10'
    //日志-slf4j
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.25'
    //gitHub-超轻量级的Java类路径和模块路径扫描器
    compile group: 'io.github.lukehutch', name: 'fast-classpath-scanner', version: '2.18.1'
    //谷歌-Gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    //定时器-quartz
    compile group: 'org.quartz-scheduler', name: 'quartz', version: '2.3.0'
    //mongo-Bson
    compile group: 'org.mongodb', name: 'mongo-java-driver', version: '3.8.2'
    //mysql-jdbc
    compile group: 'mysql', name: 'mysql-connector-java', version: '6.0.6'
    //redis、redisson
    compile group: 'redis.clients', name: 'jedis', version: '2.9.0'
    compile group: 'org.redisson', name: 'redisson', version: '3.5.4'
    //Etcd-连接池
    compile group: 'org.mousio', name: 'etcd4j', version: '2.17.0'
    //ElasticSearch-7.9.1
    compile group: 'org.elasticsearch', name: 'elasticsearch', version: '7.9.1'
    compile group: 'org.elasticsearch.client', name: 'elasticsearch-rest-high-level-client', version: '7.9.1'
    //neo4j-服务器开发依赖
    compile group: 'org.neo4j.driver', name: 'neo4j-java-driver', version: '1.5.1'

}


/**
 * 打包方式:Jar
 * 是否排除依赖:排除
 */
jar {

    //不排除依赖的方法
    //from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }

    //依赖的路径,该参数及对应逻辑
    String someString = ''
    //遍历项目的所有依赖的jar包赋值给变量someString
    configurations.runtime.each {
        //组装
        someString = someString + " " + libsPath + it.name
    }

    //告诉gradle,我的Main是什么,打包时候有用
    manifest {
        //主程序是这个
        attributes('Main-Class': mainPath)
        //未打包依赖时扫描的依赖路径
        attributes 'Class-Path': someString
    }

}

//编译参数名称 jdk1.8新特性之一,默认关闭的,由于用到了反射,打开它,不然build后没办法启动
compileJava {

    //等价于:require -parameters,please add '-parameters' in [preferences]->[Build.JavaCompiler]->[Additional Parameters]
    options.compilerArgs << '-parameters'

}

//将所有项目jar包导出至目标目录 执行命令: gradle build outJar
task copyJar(type: Copy) {
    // 执行到处目录
    from configurations.runtime into 'libs'
}